buildscript {
    ext {
        dependencyManagementPluginVersion = '0.5.3.RELEASE'
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }

//        maven { url "https://plugins.gradle.org/m2/" } //for sonarqube plugin
    }

    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}




allprojects {
    group 'net.supersun.msa.demo'
    version 'noah-1.0'

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
}


subprojects {

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        jcenter()
        repositories {
            maven {
                url 'http://repo.spring.io/snapshot'
            }
            maven { url 'http://repo.spring.io/milestone' }
        }
//        maven { url "https://plugins.gradle.org/m2/" } //for sonarqube plugin
//        maven { url 'http://repo.spring.io/milestone' }
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
            mavenBom("org.springframework.boot:spring-boot-starter-parent:${springBootVersion}")
        }
    }


    ext {
//        SLF4J_VERSION = '1.7.11'
//        JUNIT_VERSION = '4.11'
//        camelVersion = "2.15.2"
        camelVersion = "2.16.2"
        mysqlVersion = "5.1.34"

    }

    dependencies {

        compile("org.slf4j:slf4j-api")
        compile("org.slf4j:jcl-over-slf4j")
        compile("ch.qos.logback:logback-classic")
        compile("org.projectlombok:lombok:1.16.8")
        compile("org.apache.commons:commons-lang3:3.1")


//        compile("org.springframework.boot:spring-boot-starter-tomcat")






        // end::jetty[]
        // tag::actuator[]
//        compile("org.springframework.boot:spring-boot-starter-actuator") {
//            exclude module: "spring-boot-starter-logging"
//        }
//
//        compile("org.springframework.hateoas:spring-hateoas:0.16.0.RELEASE")
////    compile("com.h2database:h2")
//        compile("com.google.guava:guava:18.0")
//        compile("commons-lang:commons-lang:2.2")
//        compile("com.jayway.jsonpath:json-path:2.0.0")
//
//        compile("org.apache.camel:camel-core:$camelVersion")
//        compile("org.apache.camel:camel-spring:$camelVersion")
//        compile("org.apache.camel:camel-cxf:$camelVersion")
//        compile("org.apache.camel:camel-servlet:$camelVersion")
//        compile("org.apache.camel:camel-spring-javaconfig:$camelVersion")
//
//        compile("org.apache.camel:camel-metrics:$camelVersion")
//
//        compile("org.apache.camel:camel-freemarker:$camelVersion")
//        compile("org.apache.camel:camel-mail:$camelVersion")
//        compile("org.apache.camel:camel-rabbitmq:$camelVersion")
//
//        compile("org.apache.camel:camel-quartz2:$camelVersion")
//
//        compile("org.apache.httpcomponents:httpclient:4.3.6")
//        compile("org.apache.commons:commons-lang3:3.1")
//
//        compile("javax.mail:mail:1.4.7")
//        compile("org.javatuples:javatuples:1.2")
//
//        testCompile("org.apache.camel:camel-test-spring:$camelVersion")
//
//        // end::actuator[]
//        testCompile("junit:junit")
//        testCompile("org.springframework.boot:spring-boot-starter-test")
    }

}


task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}